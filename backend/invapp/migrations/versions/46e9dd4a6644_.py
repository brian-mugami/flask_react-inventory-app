"""empty message

Revision ID: 46e9dd4a6644
Revises: 5b415dce07c5
Create Date: 2023-03-01 16:41:38.293361

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '46e9dd4a6644'
down_revision = '5b415dce07c5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['account_id'])

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index('ix_customers_customer_number')
        batch_op.create_index(batch_op.f('ix_customers_customer_number'), ['customer_number'], unique=True)
        batch_op.create_unique_constraint(None, ['account_id'])
        batch_op.create_unique_constraint(None, ['customer_contact'])

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)
        batch_op.drop_index('ix_items_item_name')
        batch_op.create_index(batch_op.f('ix_items_item_name'), ['item_name'], unique=True)
        batch_op.drop_index('ix_items_item_number')
        batch_op.create_index(batch_op.f('ix_items_item_number'), ['item_number'], unique=True)

    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=4),
               existing_nullable=False)

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.alter_column('cost',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=4),
               existing_nullable=False)

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.drop_index('ix_suppliers_supplier_number')
        batch_op.create_index(batch_op.f('ix_suppliers_supplier_number'), ['supplier_number'], unique=True)
        batch_op.create_unique_constraint(None, ['supplier_contact'])
        batch_op.create_unique_constraint(None, ['account_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_suppliers_supplier_number'))
        batch_op.create_index('ix_suppliers_supplier_number', ['supplier_number'], unique=False)

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.alter_column('cost',
               existing_type=sa.Float(precision=4),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=4),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_items_item_number'))
        batch_op.create_index('ix_items_item_number', ['item_number'], unique=False)
        batch_op.drop_index(batch_op.f('ix_items_item_name'))
        batch_op.create_index('ix_items_item_name', ['item_name'], unique=False)
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_customers_customer_number'))
        batch_op.create_index('ix_customers_customer_number', ['customer_number'], unique=False)

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    # ### end Alembic commands ###
