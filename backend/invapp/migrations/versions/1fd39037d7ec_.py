"""empty message

Revision ID: 1fd39037d7ec
Revises: 539b0dde26d6
Create Date: 2023-03-27 13:12:02.835829

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1fd39037d7ec'
down_revision = '539b0dde26d6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.alter_column('buying_price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=4),
               existing_nullable=False)

    with op.batch_alter_table('supplier balances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invoice_amount', sa.Float(), nullable=False))
        batch_op.drop_constraint('supplier balances_purchase_id_key', type_='unique')
        batch_op.drop_constraint('supplier balances_supplier_id_key', type_='unique')
        batch_op.drop_column('amount')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('supplier balances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('supplier balances_supplier_id_key', ['supplier_id'])
        batch_op.create_unique_constraint('supplier balances_purchase_id_key', ['purchase_id'])
        batch_op.drop_column('invoice_amount')

    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.alter_column('buying_price',
               existing_type=sa.Float(precision=4),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    # ### end Alembic commands ###
