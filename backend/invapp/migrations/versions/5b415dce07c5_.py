"""empty message

Revision ID: 5b415dce07c5
Revises: 
Create Date: 2023-03-01 16:37:36.574103

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5b415dce07c5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=80), nullable=False),
    sa.Column('account_description', sa.String(length=256), nullable=True),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_name'),
    sa.UniqueConstraint('account_number')
    )
    op.create_table('item_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=80), nullable=False),
    sa.Column('account_description', sa.String(length=256), nullable=True),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_name'),
    sa.UniqueConstraint('account_number')
    )
    op.create_table('lots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch', sa.String(length=50), nullable=False),
    sa.Column('lot', sa.String(length=50), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('batch'),
    sa.UniqueConstraint('lot')
    )
    op.create_table('supplier_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=80), nullable=False),
    sa.Column('account_description', sa.String(length=256), nullable=True),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_name'),
    sa.UniqueConstraint('account_number')
    )
    op.create_table('token_blocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blocklist_jti'), ['jti'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('date_registered', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['item_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=80), nullable=False),
    sa.Column('customer_number', sa.Integer(), nullable=True),
    sa.Column('customer_contact', sa.String(length=80), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('date_registered', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['customer_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customers_customer_name'), ['customer_name'], unique=True)
        batch_op.create_index(batch_op.f('ix_customers_customer_number'), ['customer_number'], unique=False)

    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supplier_name', sa.String(length=80), nullable=False),
    sa.Column('supplier_number', sa.Integer(), nullable=True),
    sa.Column('supplier_site', sa.String(length=80), nullable=True),
    sa.Column('supplier_contact', sa.String(length=80), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('date_registered', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['supplier_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_suppliers_supplier_name'), ['supplier_name'], unique=True)
        batch_op.create_index(batch_op.f('ix_suppliers_supplier_number'), ['supplier_number'], unique=False)

    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_image', sa.String(length=50), nullable=False),
    sa.Column('item_name', sa.String(length=80), nullable=False),
    sa.Column('item_number', sa.Integer(), nullable=True),
    sa.Column('item_weight', sa.Float(), nullable=True),
    sa.Column('item_volume', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_archived', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('date_unarchived', sa.DateTime(), nullable=True),
    sa.Column('price', sa.Float(precision=2), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_items_item_name'), ['item_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_items_item_number'), ['item_number'], unique=False)

    op.create_table('purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(precision=4), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('date_bought', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Float(precision=4), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('date_sold', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_lots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['lots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('item_lots')
    op.drop_table('sales')
    op.drop_table('purchases')
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_items_item_number'))
        batch_op.drop_index(batch_op.f('ix_items_item_name'))

    op.drop_table('items')
    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_suppliers_supplier_number'))
        batch_op.drop_index(batch_op.f('ix_suppliers_supplier_name'))

    op.drop_table('suppliers')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customers_customer_number'))
        batch_op.drop_index(batch_op.f('ix_customers_customer_name'))

    op.drop_table('customers')
    op.drop_table('categories')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blocklist_jti'))

    op.drop_table('token_blocklist')
    op.drop_table('supplier_account')
    op.drop_table('lots')
    op.drop_table('item_account')
    op.drop_table('customer_account')
    # ### end Alembic commands ###
