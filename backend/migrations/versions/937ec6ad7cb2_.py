"""empty message

Revision ID: 937ec6ad7cb2
Revises: 60d3af7d2671
Create Date: 2023-04-03 12:27:18.589334

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '937ec6ad7cb2'
down_revision = '60d3af7d2671'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invoice_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('expenses_item_id_purchase_id_key', type_='unique')
        batch_op.create_unique_constraint(None, ['item_id', 'invoice_id'])
        batch_op.drop_constraint('expenses_purchase_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'invoices', ['invoice_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('purchase_id')

    with op.batch_alter_table('inventory balances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invoice_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('inventory balances_item_id_purchase_id_key', type_='unique')
        batch_op.create_unique_constraint(None, ['item_id', 'invoice_id'])
        batch_op.drop_constraint('inventory balances_purchase_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'invoices', ['invoice_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('purchase_id')

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    with op.batch_alter_table('purchase accounting', schema=None) as batch_op:
        batch_op.drop_constraint('purchase accounting_invoice_id_inventory_id_expense_id_key', type_='unique')
        batch_op.create_unique_constraint(None, ['invoice_id'])
        batch_op.drop_constraint('purchase accounting_expense_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('purchase accounting_inventory_id_fkey', type_='foreignkey')
        batch_op.drop_column('inventory_id')
        batch_op.drop_column('expense_id')

    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.alter_column('buying_price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=4),
               existing_nullable=False)

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.alter_column('selling_price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=4),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.alter_column('selling_price',
               existing_type=sa.Float(precision=4),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.alter_column('buying_price',
               existing_type=sa.Float(precision=4),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('purchase accounting', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expense_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('inventory_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('purchase accounting_inventory_id_fkey', 'inventory balances', ['inventory_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('purchase accounting_expense_id_fkey', 'expenses', ['expense_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('purchase accounting_invoice_id_inventory_id_expense_id_key', ['invoice_id', 'inventory_id', 'expense_id'])

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    with op.batch_alter_table('inventory balances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('purchase_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('inventory balances_purchase_id_fkey', 'purchases', ['purchase_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('inventory balances_item_id_purchase_id_key', ['item_id', 'purchase_id'])
        batch_op.drop_column('invoice_id')

    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('purchase_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('expenses_purchase_id_fkey', 'purchases', ['purchase_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('expenses_item_id_purchase_id_key', ['item_id', 'purchase_id'])
        batch_op.drop_column('invoice_id')

    # ### end Alembic commands ###
